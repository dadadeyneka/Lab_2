#include <iostream.h> 
#include <string.h> 

class employee 
employee::employee()\\конструктор по замовчанню
{ 
public: 
employee(char *, char *, char*); 
void show_employee(void); 
private: 
char person [64]; //виділення памяті для особи
char position[64]; //для посади
char ingeneer[64]; //для стажу
}; 

employee::employee(char *person, char *position,char *ingeneer)\\конструктор з параметрами 

{ 
strcpy(employee::person, person); 
strcpy(employee::position, position); 
strcpy(employee::ingeneer, ingeneer);
} 

void employee::show_employee(void) 

{ 
cout « "Name: " « name « endl; //введення імені
cout « "Position: " « position « endl; //посади
cout « "Ingeneer: $" « ingeneer « endl; //стажу
} 

class management : public employee 

{ 
public: 
management(char *, char *, char *, float, float, int); 
void show_management(void); 
private: 
float annual_bonus; //виведення отримануваного бонусу
char degree[64]; 
int stock; 
}; 

management::management(char *person, char *position, char *car, char *ingeneer, float bonus, int stock) : employee(name, position, ingeneer) 

{ 
strcpy(management::degree, degree) ; //введення освіти працівника
management::bonus = bonus ; //введення отримуваного бонусу
management::stock = stock; //сплачених податків
} 

void management::show_management(void) 

{ 
show_employee(); 
cout « "Name " « name « endl; 
cout « "Bonus: $" « bonus « endl; 
cout « "Stock: " « stock« endl; 
} 
class taxes:: public employee
{public:
taxes(char*, char*, char*,float, int);
void show_taxes(void);
int stock;
};
taxes::taxes(char* person, char* position, char* car, float bonus, int stock) : employee(name, position,bonus)
{stecpy(taxes::position, position);
taxes::bonus=bonus;
taxes::stock=stock;
}

void main(void) 

{ 
employee position("Andrey Petrov", "ingeneer(bridge department)", 35000); 
management superior("Valeriy Abdulovich", "ingeneering department", "master", 50000.0, 5000, 1000); 
position.show_employee() ; 
superior.show_management(); 
}

